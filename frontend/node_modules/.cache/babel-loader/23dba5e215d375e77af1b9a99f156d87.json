{"ast":null,"code":"var _jsxFileName = \"D:\\\\Andre\\\\Documents\\\\SFU Classes\\\\Projects\\\\Restaurant-reviews-web-app\\\\frontend\\\\src\\\\components\\\\restaurants-list.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport RestaurantDataService from '../services/restaurant.js';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RestaurantsList = props => {\n  _s();\n\n  const [restaurants, setRestaurants] = useState([]);\n  const [searchName, setSearchName] = useState(\"\");\n  const [searchZip, setSearchZip] = useState(\"\");\n  const [searchCuisine, setSearchCuisine] = useState(\"\");\n  const [cuisines, setCuisines] = useState([\"All Cuisines\"]);\n  useEffect(() => {\n    retrieveRestaurants();\n    retrieveCuisines();\n  }, []);\n\n  const onChangeSearchName = e => {\n    const searchName = e.target.value;\n    setSearchName(searchName);\n  };\n\n  const onChangeSearchZip = e => {\n    const searchZip = e.target.value;\n    setSearchZip(searchZip);\n  };\n\n  const onChangeSearchCuisine = e => {\n    const searchCuisine = e.target.value;\n    setSearchCuisine(searchCuisine);\n  };\n\n  const retrieveRestaurants = () => {\n    RestaurantDataService.getAll().then(response => {\n      console.log(response.data);\n      setRestaurants(response.data.restaurants);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const retrieveCuisines = () => {\n    RestaurantDataService.getCuisines().then(response => {\n      console.log(response.data);\n      setCuisines([\"All Cuisines\"].concat(response.data));\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const refreshList = () => {\n    retrieveRestaurants();\n  };\n\n  const find = (query, by) => {\n    RestaurantDataService.find(query, by).then(response => {\n      console.log(response.data);\n      setRestaurants(response.data.restaurants);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const findByName = () => {\n    find(searchName, \"name\");\n  };\n\n  const findByZip = () => {\n    find(searchZip, \"zipcode\");\n  };\n\n  const findByCuisine = () => {\n    if (searchCuisine == \"All Cuisines\") refreshList();else find(searchCuisines, \"cuisine\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row pb-1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RestaurantsList, \"qP4ccJq+qLTVWRY4CcjRCEH3CMA=\");\n\n_c = RestaurantsList;\nexport default RestaurantsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestaurantsList\");","map":{"version":3,"names":["React","useState","useEffect","RestaurantDataService","Link","RestaurantsList","props","restaurants","setRestaurants","searchName","setSearchName","searchZip","setSearchZip","searchCuisine","setSearchCuisine","cuisines","setCuisines","retrieveRestaurants","retrieveCuisines","onChangeSearchName","e","target","value","onChangeSearchZip","onChangeSearchCuisine","getAll","then","response","console","log","data","catch","getCuisines","concat","refreshList","find","query","by","findByName","findByZip","findByCuisine","searchCuisines"],"sources":["D:/Andre/Documents/SFU Classes/Projects/Restaurant-reviews-web-app/frontend/src/components/restaurants-list.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport RestaurantDataService from '../services/restaurant.js';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst RestaurantsList = props => {\r\n  const [restaurants, setRestaurants] = useState([]);\r\n  const [searchName, setSearchName] = useState(\"\");\r\n  const [searchZip, setSearchZip] = useState(\"\");\r\n  const [searchCuisine, setSearchCuisine] = useState(\"\");\r\n  const [cuisines, setCuisines] = useState([\"All Cuisines\"]);\r\n\r\n  useEffect(() => {\r\n    retrieveRestaurants();\r\n    retrieveCuisines();\r\n  }, []);\r\n\r\n  const onChangeSearchName = e => {\r\n    const searchName = e.target.value;\r\n    setSearchName(searchName);\r\n  }\r\n\r\n  const onChangeSearchZip = e => {\r\n    const searchZip = e.target.value;\r\n    setSearchZip(searchZip);\r\n  }\r\n\r\n  const onChangeSearchCuisine = e => {\r\n    const searchCuisine = e.target.value;\r\n    setSearchCuisine(searchCuisine);\r\n  };\r\n\r\n  const retrieveRestaurants = () => {\r\n    RestaurantDataService.getAll()\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setRestaurants(response.data.restaurants);\r\n      })\r\n      .catch(e => { console.log(e); });\r\n  };\r\n\r\n  const retrieveCuisines = () => {\r\n    RestaurantDataService.getCuisines()\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setCuisines([\"All Cuisines\"].concat(response.data));\r\n      })\r\n      .catch(e => { console.log(e); });\r\n  };\r\n\r\n  const refreshList = () => { retrieveRestaurants(); };\r\n\r\n  const find = (query, by) => {\r\n    RestaurantDataService.find(query, by)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setRestaurants(response.data.restaurants);\r\n      })\r\n      .catch(e => { console.log(e); });\r\n  };\r\n\r\n  const findByName = () => { find(searchName, \"name\") };\r\n\r\n  const findByZip = () => { find(searchZip, \"zipcode\") };\r\n\r\n  const findByCuisine = () => {\r\n    if (searchCuisine == \"All Cuisines\") refreshList();\r\n    else find(searchCuisines, \"cuisine\");\r\n  }\r\n\r\n  return (\r\n    <div >\r\n      <div className=\"row pb-1\">\r\n        \r\n        \r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RestaurantsList;"],"mappings":"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"},"metadata":{},"sourceType":"module"}